{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface CryptoPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  generateKeyPair() : Promise<{ publicKey: string, privateKey: string}>;\n  generateSharedSecret(options: {privateKey: string, publicKey: string, salt: string}) : Promise<{ sharedSecret: string }>;\n  /*\n  ** Generate Random Bytes (Secure)\n  **\n  ** @returns Bytes as Base64 String\n  */\n  generateRandomBytes(options: {count: number}) : Promise<{ bytesBase64: string }>;\n\n  /*\n  ** Encrypt data with a key using AES-256-GCM\n  **\n  ** @returns The encrypted data, auth tag and the random IV\n  */\n  encrypt(options: {key: string, data: string}) : Promise<{ encryptedData: string, tag: string, iv: string }>;\n  decrypt(options: {key: string, encryptedData: string, tag: string, iv: string}) : Promise<{unencryptedData: string}>;\n\n  hash(options: {data: string}) : Promise<{hash: string}>;\n}\n"]}